(set-info :original "/tmp/sea-GsFRYj/sum03_true-unreach-call_false-termination.pp.ms.o.bc")
(set-info :authors "SeaHorn v.0.1.0-rc3")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel main@entry (Int ))
(declare-rel main@postcall (Bool Int Int ))
(declare-rel main@precall.split ())
(declare-var main@%_10_0 Int )
(declare-var main@%_11_0 Bool )
(declare-var main@%_12_0 Bool )
(declare-var main@%..i_0 Bool )
(declare-var main@%_13_0 Bool )
(declare-var main@%.lcssa3_1 Bool )
(declare-var main@%_5_2 Bool )
(declare-var main@%_6_2 Int )
(declare-var main@%_7_2 Int )
(declare-var main@%_0_0 Int )
(declare-var @__VERIFIER_nondet_uint_0 Int )
(declare-var main@%_2_0 Int )
(declare-var main@%_4_0 Bool )
(declare-var main@entry_0 Bool )
(declare-var main@postcall.preheader_0 Bool )
(declare-var main@postcall_0 Bool )
(declare-var main@%_5_0 Bool )
(declare-var main@%_6_0 Int )
(declare-var main@%_7_0 Int )
(declare-var main@%_5_1 Bool )
(declare-var main@%_6_1 Int )
(declare-var main@%_7_1 Int )
(declare-var main@precall_0 Bool )
(declare-var main@%.lcssa_0 Bool )
(declare-var main@%.lcssa_1 Bool )
(declare-var main@precall.split_0 Bool )
(declare-var main@%_8_0 Int )
(declare-var main@%_9_0 Int )
(declare-var main@%_14_0 Bool )
(declare-var main@postcall_1 Bool )
(declare-var main@precall.loopexit_0 Bool )
(declare-var main@%.lcssa3_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule (main@entry @__VERIFIER_nondet_uint_0))
(rule (=> (and (main@entry @__VERIFIER_nondet_uint_0)
         true
         (= main@%_0_0 @__VERIFIER_nondet_uint_0)
         (= main@%_2_0 @__VERIFIER_nondet_uint_0)
         (=> main@postcall.preheader_0
             (and main@postcall.preheader_0 main@entry_0))
         (=> (and main@postcall.preheader_0 main@entry_0) main@%_4_0)
         (=> main@postcall_0 (and main@postcall_0 main@postcall.preheader_0))
         main@postcall_0
         (=> (and main@postcall_0 main@postcall.preheader_0)
             (= main@%_5_0 false))
         (=> (and main@postcall_0 main@postcall.preheader_0) (= main@%_6_0 1))
         (=> (and main@postcall_0 main@postcall.preheader_0) (= main@%_7_0 2))
         (=> (and main@postcall_0 main@postcall.preheader_0)
             (= main@%_5_1 main@%_5_0))
         (=> (and main@postcall_0 main@postcall.preheader_0)
             (= main@%_6_1 main@%_6_0))
         (=> (and main@postcall_0 main@postcall.preheader_0)
             (= main@%_7_1 main@%_7_0)))
    (main@postcall main@%_5_1 main@%_7_1 main@%_6_1)))
(rule (=> (and (main@entry @__VERIFIER_nondet_uint_0)
         true
         (= main@%_0_0 @__VERIFIER_nondet_uint_0)
         (= main@%_2_0 @__VERIFIER_nondet_uint_0)
         (=> main@precall_0 (and main@precall_0 main@entry_0))
         (=> (and main@precall_0 main@entry_0) (not main@%_4_0))
         (=> (and main@precall_0 main@entry_0) (= main@%.lcssa_0 false))
         (=> (and main@precall_0 main@entry_0)
             (= main@%.lcssa_1 main@%.lcssa_0))
         (=> main@precall_0 main@%.lcssa_1)
         (=> main@precall.split_0 (and main@precall.split_0 main@precall_0))
         main@precall.split_0)
    main@precall.split))
(rule (=> (and (main@postcall main@%_5_0 main@%_7_0 main@%_6_0)
         true
         (not main@%_5_0)
         (= main@%_8_0 (+ main@%_7_0 2))
         (= main@%_9_0 (+ main@%_6_0 1))
         (= main@%_10_0 (* main@%_9_0 2))
         (= main@%_11_0 (= main@%_8_0 main@%_10_0))
         (= main@%_12_0 (= main@%_8_0 0))
         (= main@%..i_0 (or main@%_12_0 main@%_11_0))
         (= main@%_14_0 (= main@%..i_0 false))
         (=> main@postcall_1 (and main@postcall_1 main@postcall_0))
         main@postcall_1
         (=> (and main@postcall_1 main@postcall_0) main@%_13_0)
         (=> (and main@postcall_1 main@postcall_0) (= main@%_5_1 main@%_14_0))
         (=> (and main@postcall_1 main@postcall_0) (= main@%_6_1 main@%_9_0))
         (=> (and main@postcall_1 main@postcall_0) (= main@%_7_1 main@%_8_0))
         (=> (and main@postcall_1 main@postcall_0) (= main@%_5_2 main@%_5_1))
         (=> (and main@postcall_1 main@postcall_0) (= main@%_6_2 main@%_6_1))
         (=> (and main@postcall_1 main@postcall_0) (= main@%_7_2 main@%_7_1)))
    (main@postcall main@%_5_2 main@%_7_2 main@%_6_2)))
(rule (=> (and (main@postcall main@%_5_0 main@%_7_0 main@%_6_0)
         true
         (not main@%_5_0)
         (= main@%_8_0 (+ main@%_7_0 2))
         (= main@%_9_0 (+ main@%_6_0 1))
         (= main@%_10_0 (* main@%_9_0 2))
         (= main@%_11_0 (= main@%_8_0 main@%_10_0))
         (= main@%_12_0 (= main@%_8_0 0))
         (= main@%..i_0 (or main@%_12_0 main@%_11_0))
         (= main@%_14_0 (= main@%..i_0 false))
         (=> main@precall.loopexit_0
             (and main@precall.loopexit_0 main@postcall_0))
         (=> (and main@precall.loopexit_0 main@postcall_0) (not main@%_13_0))
         (=> (and main@precall.loopexit_0 main@postcall_0)
             (= main@%.lcssa3_0 main@%_14_0))
         (=> (and main@precall.loopexit_0 main@postcall_0)
             (= main@%.lcssa3_1 main@%.lcssa3_0))
         (=> main@precall_0 (and main@precall_0 main@precall.loopexit_0))
         (=> (and main@precall_0 main@precall.loopexit_0)
             (= main@%.lcssa_0 main@%.lcssa3_1))
         (=> (and main@precall_0 main@precall.loopexit_0)
             (= main@%.lcssa_1 main@%.lcssa_0))
         (=> main@precall_0 main@%.lcssa_1)
         (=> main@precall.split_0 (and main@precall.split_0 main@precall_0))
         main@precall.split_0)
    main@precall.split))
(query main@precall.split)

