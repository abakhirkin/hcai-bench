(set-info :original "/tmp/sea-GKsxKC/trex04_true-unreach-call_false-termination.pp.ms.o.bc")
(set-info :authors "SeaHorn v.0.1.0-rc3")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel foo@_call (Int ))
(declare-rel foo@.split (Int ))
(declare-rel foo (Bool Bool Bool ))
(declare-rel main@entry (Int Int ))
(declare-rel main@_bb5 (Int Int ))
(declare-rel main@verifier.error.split ())
(declare-var foo@%_2_0 Int )
(declare-var @__VERIFIER_nondet_bool_0 Int )
(declare-var foo@%_4_0 Int )
(declare-var foo@_call_0 Bool )
(declare-var foo@.split_0 Bool )
(declare-var main@%_25_0 Bool )
(declare-var main@%_22_0 Bool )
(declare-var main@%_24_0 Bool )
(declare-var main@%_18_0 Bool )
(declare-var main@%_16_0 Int )
(declare-var main@%_10_0 Int )
(declare-var main@%_11_0 Bool )
(declare-var main@%_12_0 Int )
(declare-var main@%_4_0 Int )
(declare-var main@%_6_0 Int )
(declare-var main@%_7_0 Bool )
(declare-var main@%not..i_0 Bool )
(declare-var main@%_0_0 Int )
(declare-var @__VERIFIER_nondet_int_0 Int )
(declare-var main@%.off.i_0 Int )
(declare-var main@%_2_0 Bool )
(declare-var main@entry_0 Bool )
(declare-var main@%_1_0 Int )
(declare-var main@_bb_0 Bool )
(declare-var main@%_5_0 Bool )
(declare-var main@%..i_0 Int )
(declare-var main@_bb1_0 Bool )
(declare-var main@_bb2_0 Bool )
(declare-var |tuple(main@_bb_0, main@_bb2_0)| Bool )
(declare-var main@%_13_0 Bool )
(declare-var main@_bb3_0 Bool )
(declare-var main@_bb4_0 Bool )
(declare-var |tuple(main@_bb2_0, main@_bb4_0)| Bool )
(declare-var main@%...i_0 Int )
(declare-var main@_bb5_0 Bool )
(declare-var main@%x.0.i_0 Int )
(declare-var main@%x.0.i_1 Int )
(declare-var main@_bb6_0 Bool )
(declare-var main@%_20_0 Int )
(declare-var main@_bb5_1 Bool )
(declare-var main@%x.0.i_2 Int )
(declare-var main@_bb7_0 Bool )
(declare-var main@%_23_0 Int )
(declare-var main@precall_0 Bool )
(declare-var main@__VERIFIER_assert_0 Bool )
(declare-var main@_bb8_0 Bool )
(declare-var main@verifier.error_0 Bool )
(declare-var main@verifier.error.split_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule (foo true true true))
(rule (foo false true true))
(rule (foo false false false))
(rule (foo@_call @__VERIFIER_nondet_bool_0))
(rule (=> (and (foo@_call @__VERIFIER_nondet_bool_0)
         true
         (= foo@%_2_0 @__VERIFIER_nondet_bool_0)
         (= foo@%_4_0 @__VERIFIER_nondet_bool_0)
         (=> foo@.split_0 (and foo@.split_0 foo@_call_0))
         foo@.split_0)
    (foo@.split @__VERIFIER_nondet_bool_0)))
(rule (=> (foo@.split @__VERIFIER_nondet_bool_0) (foo true false false)))
(rule (main@entry @__VERIFIER_nondet_bool_0 @__VERIFIER_nondet_int_0))
(rule (let ((a!1 (and (main@entry @__VERIFIER_nondet_bool_0 @__VERIFIER_nondet_int_0)
                true
                (= main@%_0_0 @__VERIFIER_nondet_int_0)
                (= main@%.off.i_0 (+ main@%_1_0 1000000))
                (= main@%_2_0
                   (ite (>= main@%.off.i_0 0) (< main@%.off.i_0 2000001) false))
                main@%_2_0
                (=> main@_bb_0 (and main@_bb_0 main@entry_0))
                (=> main@_bb_0 (= main@%_4_0 @__VERIFIER_nondet_bool_0))
                (=> main@_bb_0 (= main@%_6_0 @__VERIFIER_nondet_bool_0))
                (=> main@_bb_0 (= main@%not..i_0 (xor main@%_5_0 true)))
                (=> main@_bb_0 (= main@%..i_0 (ite main@%not..i_0 1 0)))
                (=> main@_bb1_0 (and main@_bb1_0 main@_bb_0))
                (=> (and main@_bb1_0 main@_bb_0) main@%_7_0)
                (foo main@_bb1_0 false false)
                (=> |tuple(main@_bb_0, main@_bb2_0)| main@_bb_0)
                (=> main@_bb2_0
                    (or (and main@_bb2_0 main@_bb1_0)
                        (and main@_bb_0 |tuple(main@_bb_0, main@_bb2_0)|)))
                (=> (and main@_bb_0 |tuple(main@_bb_0, main@_bb2_0)|)
                    (not main@%_7_0))
                (=> main@_bb2_0 (= main@%_10_0 @__VERIFIER_nondet_bool_0))
                (=> main@_bb2_0 (= main@%_12_0 @__VERIFIER_nondet_bool_0))
                (=> main@_bb3_0 (and main@_bb3_0 main@_bb2_0))
                (=> (and main@_bb3_0 main@_bb2_0) main@%_11_0)
                (foo main@_bb3_0 false false)
                (=> |tuple(main@_bb2_0, main@_bb4_0)| main@_bb2_0)
                (=> main@_bb4_0
                    (or (and main@_bb4_0 main@_bb3_0)
                        (and main@_bb2_0 |tuple(main@_bb2_0, main@_bb4_0)|)))
                (=> (and main@_bb2_0 |tuple(main@_bb2_0, main@_bb4_0)|)
                    (not main@%_11_0))
                (=> main@_bb4_0 (= main@%_16_0 (ite main@%_5_0 (- 1) 0)))
                (=> main@_bb4_0
                    (= main@%...i_0 (ite main@%_13_0 main@%_16_0 main@%..i_0)))
                (=> main@_bb5_0 (and main@_bb5_0 main@_bb4_0))
                main@_bb5_0
                (=> (and main@_bb5_0 main@_bb4_0) (= main@%x.0.i_0 main@%_1_0))
                (=> (and main@_bb5_0 main@_bb4_0)
                    (= main@%x.0.i_1 main@%x.0.i_0)))))
  (=> a!1 (main@_bb5 main@%x.0.i_1 main@%...i_0))))
(rule (let ((a!1 (and (main@_bb5 main@%x.0.i_0 main@%...i_0)
                true
                (= main@%_18_0 (> main@%x.0.i_0 0))
                (=> main@_bb6_0 (and main@_bb6_0 main@_bb5_0))
                (=> (and main@_bb6_0 main@_bb5_0) main@%_18_0)
                (=> main@_bb6_0 (= main@%_20_0 (- main@%x.0.i_0 main@%...i_0)))
                (=> main@_bb5_1 (and main@_bb5_1 main@_bb6_0))
                main@_bb5_1
                (=> (and main@_bb5_1 main@_bb6_0) (= main@%x.0.i_1 main@%_20_0))
                (=> (and main@_bb5_1 main@_bb6_0)
                    (= main@%x.0.i_2 main@%x.0.i_1)))))
  (=> a!1 (main@_bb5 main@%x.0.i_2 main@%...i_0))))
(rule (let ((a!1 (and (main@_bb5 main@%x.0.i_0 main@%...i_0)
                true
                (= main@%_18_0 (> main@%x.0.i_0 0))
                (=> main@_bb7_0 (and main@_bb7_0 main@_bb5_0))
                (=> (and main@_bb7_0 main@_bb5_0) (not main@%_18_0))
                (=> main@_bb7_0 (= main@%_22_0 (< main@%x.0.i_0 1)))
                (=> main@_bb7_0 (= main@%_23_0 (ite main@%_22_0 1 0)))
                (=> main@_bb7_0 (not main@%_24_0))
                (=> main@precall_0 (and main@precall_0 main@_bb7_0))
                (=> main@__VERIFIER_assert_0
                    (and main@__VERIFIER_assert_0 main@precall_0))
                (=> main@__VERIFIER_assert_0 (= main@%_25_0 (= main@%_23_0 0)))
                (=> main@__VERIFIER_assert_0 main@%_25_0)
                (=> main@_bb8_0 (and main@_bb8_0 main@__VERIFIER_assert_0))
                (=> main@verifier.error_0
                    (and main@verifier.error_0 main@_bb8_0))
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!1 main@verifier.error.split)))
(query main@verifier.error.split)

