(set-info :original "/tmp/sea-LULXOT/trex01_false-unreach-call_true-termination.pp.ms.o.bc")
(set-info :authors "SeaHorn v.0.1.0-rc3")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel main@entry (Int Int ))
(declare-rel main@_bb3 (Int Int ))
(declare-rel main@verifier.error.split ())
(declare-var main@%_6_0 Bool )
(declare-var main@%_19_0 Bool )
(declare-var main@%_21_0 Bool )
(declare-var main@%_15_0 Bool )
(declare-var main@%_8_0 Int )
(declare-var @__VERIFIER_nondet_int_0 Int )
(declare-var main@%_10_0 Int )
(declare-var main@%_12_0 Int )
(declare-var main@%_3_0 Bool )
(declare-var main@%_5_0 Bool )
(declare-var main@%_0_0 Int )
(declare-var @__VERIFIER_nondet_bool_0 Int )
(declare-var main@%_1_0 Bool )
(declare-var main@entry_0 Bool )
(declare-var main@_bb1_0 Bool )
(declare-var main@precall2_0 Bool )
(declare-var main@_bb_0 Bool )
(declare-var main@precall_0 Bool )
(declare-var main@f_0 Bool )
(declare-var main@%_13_0 Int )
(declare-var main@_bb3_0 Bool )
(declare-var main@%z.0.i_0 Int )
(declare-var main@%z.0.i_1 Int )
(declare-var main@_bb4_0 Bool )
(declare-var main@%_17_0 Int )
(declare-var main@_bb3_1 Bool )
(declare-var main@%z.0.i_2 Int )
(declare-var main@_bb5_0 Bool )
(declare-var main@%_20_0 Int )
(declare-var main@precall5_0 Bool )
(declare-var main@__VERIFIER_assert_0 Bool )
(declare-var main@_bb2_0 Bool )
(declare-var main@verifier.error_0 Bool )
(declare-var main@verifier.error.split_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule (main@entry @__VERIFIER_nondet_int_0 @__VERIFIER_nondet_bool_0))
(rule (let ((a!1 (and (main@entry @__VERIFIER_nondet_int_0 @__VERIFIER_nondet_bool_0)
                true
                (= main@%_0_0 @__VERIFIER_nondet_bool_0)
                (=> main@_bb1_0 (and main@_bb1_0 main@entry_0))
                (=> (and main@_bb1_0 main@entry_0) (not main@%_1_0))
                (=> main@_bb1_0 (not main@%_5_0))
                (=> main@precall2_0 (and main@precall2_0 main@_bb1_0))
                (=> main@_bb_0 (and main@_bb_0 main@entry_0))
                (=> (and main@_bb_0 main@entry_0) main@%_1_0)
                (=> main@_bb_0 (not main@%_3_0))
                (=> main@precall_0 (and main@precall_0 main@_bb_0))
                (=> main@f_0
                    (or (and main@f_0 main@precall2_0)
                        (and main@f_0 main@precall_0)))
                (=> main@f_0 (= main@%_8_0 @__VERIFIER_nondet_int_0))
                (=> main@f_0 (= main@%_10_0 @__VERIFIER_nondet_int_0))
                (=> main@f_0 (= main@%_12_0 @__VERIFIER_nondet_int_0))
                (=> main@_bb3_0 (and main@_bb3_0 main@f_0))
                main@_bb3_0
                (=> (and main@_bb3_0 main@f_0) (= main@%z.0.i_0 1))
                (=> (and main@_bb3_0 main@f_0) (= main@%z.0.i_1 main@%z.0.i_0)))))
  (=> a!1 (main@_bb3 main@%z.0.i_1 main@%_13_0))))
(rule (let ((a!1 (and (main@_bb3 main@%z.0.i_0 main@%_13_0)
                true
                (= main@%_15_0 (< main@%z.0.i_0 main@%_13_0))
                (=> main@_bb4_0 (and main@_bb4_0 main@_bb3_0))
                (=> (and main@_bb4_0 main@_bb3_0) main@%_15_0)
                (=> main@_bb4_0 (= main@%_17_0 (* main@%z.0.i_0 2)))
                (=> main@_bb3_1 (and main@_bb3_1 main@_bb4_0))
                main@_bb3_1
                (=> (and main@_bb3_1 main@_bb4_0) (= main@%z.0.i_1 main@%_17_0))
                (=> (and main@_bb3_1 main@_bb4_0)
                    (= main@%z.0.i_2 main@%z.0.i_1)))))
  (=> a!1 (main@_bb3 main@%z.0.i_2 main@%_13_0))))
(rule (let ((a!1 (and (main@_bb3 main@%z.0.i_0 main@%_13_0)
                true
                (= main@%_15_0 (< main@%z.0.i_0 main@%_13_0))
                (=> main@_bb5_0 (and main@_bb5_0 main@_bb3_0))
                (=> (and main@_bb5_0 main@_bb3_0) (not main@%_15_0))
                (=> main@_bb5_0 (= main@%_19_0 (> main@%z.0.i_0 1)))
                (=> main@_bb5_0 (= main@%_20_0 (ite main@%_19_0 1 0)))
                (=> main@_bb5_0 (not main@%_21_0))
                (=> main@precall5_0 (and main@precall5_0 main@_bb5_0))
                (=> main@__VERIFIER_assert_0
                    (and main@__VERIFIER_assert_0 main@precall5_0))
                (=> main@__VERIFIER_assert_0 (= main@%_6_0 (= main@%_20_0 0)))
                (=> main@__VERIFIER_assert_0 main@%_6_0)
                (=> main@_bb2_0 (and main@_bb2_0 main@__VERIFIER_assert_0))
                (=> main@verifier.error_0
                    (and main@verifier.error_0 main@_bb2_0))
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!1 main@verifier.error.split)))
(query main@verifier.error.split)

